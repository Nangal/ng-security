/*
 ngsecurity v1.0.2
 (c) 2015 Concrete Solutions, Inc.
 License: MIT
*/
//# sourceMappingURL=ngsecurity.min.js.map
'use strict';(function(){function g(b){return{link:function(d,c,a){var e=c.css("display");d.$watch(function(){return b.isAuthenticated()},function(b){b?c.css("display",e):c.css("display","none")})},restrict:"A"}}function h(b){return{link:function(d,c,a){var e=c.css("display");d.$watch(function(){return b.isAuthenticated()},function(b){b?c.css("display","none"):c.css("display",e)})},restrict:"A"}}function k(b){return{link:function(d,c,a){var e=c.css("display"),f=a.ngPermissionType;d.$watch(function(){return a.ngIfPermission},
function(a){a=a.split(",");b.getPermissionValidation(f)(a)?c.css("display",e):c.css("display","none")})},restrict:"A"}}function l(b,d){return{link:function(c,a,e){var f=a.css("display"),q=e.ngPermissionType;c.$watch(function(){return d(e.ngIfPermissionModel)(c)},function(e){b.hasPermission(e)||b.getPermissionValidation(q)(e)?a.css("display",f):a.css("display","none")})},restrict:"A"}}function m(b){return{link:function(d,c,a){var e=a.ngPermissionType;d.$watch(function(){return a.ngEnabledPermission},
function(a){a=a.split(",");b.getPermissionValidation(e)(a)?c.removeAttr("disabled"):c.attr("disabled","true")})},restrict:"A"}}function n(b,d,c){var a={login:function(a,c,d){b.put("ng-security-authorization",a);b.putObject("ng-security-user",c);b.putObject("ng-security-permissions",d)},loginByUrl:function(e,b){return d(function(d,r){c.post(e,b).success(function(b){a.login(b.token,b.user,b.permissions);d(b)}).error(r)})},logout:function(){b.remove("ng-security-authorization");b.remove("ng-security-user");
b.remove("ng-security-permissions")},hasPermission:function(a){return-1!==b.getObject("ng-security-permissions").indexOf(a)},hasAllPermission:function(a){var c=b.getObject("ng-security-permissions"),d=!0;angular.isDefined(a)?angular.forEach(a,function(a){-1===c.indexOf(a)&&(d=!1)}):d=!1;return d},hasAnyPermission:function(a){var c=b.getObject("ng-security-permissions"),d=!1;angular.isDefined(a)&&angular.forEach(a,function(a){-1!==c.indexOf(a)&&(d=!0)});return d},getPermissionValidation:function(b){var c=
{ANY:a.hasAnyPermission,ALL:a.hasAllPermission};b||(b="ANY");return c[b]},isAuthenticated:function(){return!!b.get("ng-security-authorization")},getUser:function(){return b.getObject("ng-security-user")}};return a}function p(b,d,c){return{request:function(a){a.headers.Authorization=c.get("ng-security-authorization");return a},responseError:function(a){var c={401:"unauthenticated",403:"permissionDenied"};c[a.status]&&b.$broadcast(c[a.status],a);return d.reject(a)}}}angular.module("ngSecurity").directive("ngIfAuthenticated",
g).directive("ngIfAnonymous",h).directive("ngIfPermission",k).directive("ngIfPermissionModel",l).directive("ngEnabledPermission",m);g.$inject=["$security"];h.$inject=["$security"];k.$inject=["$security"];l.$inject=["$security","$parse"];m.$inject=["$security"];angular.module("ngSecurity",["ngCookies"]);angular.module("ngSecurity").factory("$security",n).factory("$securityInterceptor",p);n.$inject=["$cookies","$q","$http"];p.$inject=["$rootScope","$q","$cookies"]}).call(window);
